/*
 * Copyright (c) 2017 by Tran Le Duy
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        applicationId "duy.com.text_converter"
        versionCode 34
        versionName "3.8.4"
    }
    signingConfigs {
        proRelease
        freeRelease
    }
    flavorDimensions "default"
    productFlavors {
        free {
            signingConfig signingConfigs.freeRelease
        }
        pro {
            applicationIdSuffix ".pro"
            signingConfig signingConfigs.proRelease
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))
    android.signingConfigs.proRelease.storeFile = file(props['PRO_RELEASE_STORE_FILE'])
    android.signingConfigs.proRelease.storePassword = props['PRO_RELEASE_STORE_PASSWORD']
    android.signingConfigs.proRelease.keyAlias = props['PRO_RELEASE_KEY_ALIAS']
    android.signingConfigs.proRelease.keyPassword = props['PRO_RELEASE_KEY_PASSWORD']

    android.signingConfigs.freeRelease.storeFile = file(props['FREE_RELEASE_STORE_FILE'])
    android.signingConfigs.freeRelease.storePassword = props['FREE_RELEASE_STORE_PASSWORD']
    android.signingConfigs.freeRelease.keyAlias = props['FREE_RELEASE_KEY_ALIAS']
    android.signingConfigs.freeRelease.keyPassword = props['FREE_RELEASE_KEY_PASSWORD']
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile project(':lvl')
    compile project(':common')

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$androidSupportVersion"
    compile "com.android.support:cardview-v7:$androidSupportVersion"
    compile "com.android.support:design:$androidSupportVersion"
    compile "com.android.support:support-v4:$androidSupportVersion"


    compile 'com.google.zxing:core:3.3.0'
    compile 'com.journeyapps:zxing-android-embedded:3.5.0@aar'
    compile 'com.ogaclejapan.smarttablayout:library:1.6.1@aar'
    compile 'com.simplecityapps:recyclerview-fastscroll:1.0.16'
    compile 'io.github.kobakei:ratethisapp:1.2.0'
}
apply plugin: 'com.google.gms.google-services'